// Generated by ProtoGen, Version=2.4.1.521, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace JangadaServer {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class Networkmessage {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_JangadaServer_LoginPacket__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::JangadaServer.LoginPacket, global::JangadaServer.LoginPacket.Builder> internal__static_JangadaServer_LoginPacket__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_JangadaServer_LogoutPacket__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::JangadaServer.LogoutPacket, global::JangadaServer.LogoutPacket.Builder> internal__static_JangadaServer_LogoutPacket__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_JangadaServer_ChatPacket__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::JangadaServer.ChatPacket, global::JangadaServer.ChatPacket.Builder> internal__static_JangadaServer_ChatPacket__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_JangadaServer_NetworkMessage__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::JangadaServer.NetworkMessage, global::JangadaServer.NetworkMessage.Builder> internal__static_JangadaServer_NetworkMessage__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_JangadaServer_Messages__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::JangadaServer.Messages, global::JangadaServer.Messages.Builder> internal__static_JangadaServer_Messages__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static Networkmessage() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          "ChRuZXR3b3JrbWVzc2FnZS5wcm90bxINSmFuZ2FkYVNlcnZlciIxCgtMb2dp" + 
          "blBhY2tldBIQCgh1c2VyTmFtZRgBIAIoCRIQCghwYXNzd29yZBgCIAIoCSIc" + 
          "CgxMb2dvdXRQYWNrZXQSDAoEcXVpdBgBIAIoCCIdCgpDaGF0UGFja2V0Eg8K" + 
          "B21lc3NhZ2UYASACKAki/gEKDk5ldHdvcmtNZXNzYWdlEjAKBHR5cGUYASAC" + 
          "KA4yIi5KYW5nYWRhU2VydmVyLk5ldHdvcmtNZXNzYWdlLlR5cGUSLwoLbG9n" + 
          "aW5QYWNrZXQYAiABKAsyGi5KYW5nYWRhU2VydmVyLkxvZ2luUGFja2V0EjEK" + 
          "DGxvZ291dFBhY2tldBgDIAEoCzIbLkphbmdhZGFTZXJ2ZXIuTG9nb3V0UGFj" + 
          "a2V0Ei0KCmNoYXRQYWNrZXQYBCABKAsyGS5KYW5nYWRhU2VydmVyLkNoYXRQ" + 
          "YWNrZXQiJwoEVHlwZRIJCgVMT0dJThABEgoKBkxPR09VVBACEggKBENIQVQQ" + 
          "AyJBCghNZXNzYWdlcxI1Cg5uZXR3b3JrbWVzc2FnZRgBIAMoCzIdLkphbmdh" + 
          "ZGFTZXJ2ZXIuTmV0d29ya01lc3NhZ2VCAkgB");
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_JangadaServer_LoginPacket__Descriptor = Descriptor.MessageTypes[0];
        internal__static_JangadaServer_LoginPacket__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::JangadaServer.LoginPacket, global::JangadaServer.LoginPacket.Builder>(internal__static_JangadaServer_LoginPacket__Descriptor,
                new string[] { "UserName", "Password", });
        internal__static_JangadaServer_LogoutPacket__Descriptor = Descriptor.MessageTypes[1];
        internal__static_JangadaServer_LogoutPacket__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::JangadaServer.LogoutPacket, global::JangadaServer.LogoutPacket.Builder>(internal__static_JangadaServer_LogoutPacket__Descriptor,
                new string[] { "Quit", });
        internal__static_JangadaServer_ChatPacket__Descriptor = Descriptor.MessageTypes[2];
        internal__static_JangadaServer_ChatPacket__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::JangadaServer.ChatPacket, global::JangadaServer.ChatPacket.Builder>(internal__static_JangadaServer_ChatPacket__Descriptor,
                new string[] { "Message", });
        internal__static_JangadaServer_NetworkMessage__Descriptor = Descriptor.MessageTypes[3];
        internal__static_JangadaServer_NetworkMessage__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::JangadaServer.NetworkMessage, global::JangadaServer.NetworkMessage.Builder>(internal__static_JangadaServer_NetworkMessage__Descriptor,
                new string[] { "Type", "LoginPacket", "LogoutPacket", "ChatPacket", });
        internal__static_JangadaServer_Messages__Descriptor = Descriptor.MessageTypes[4];
        internal__static_JangadaServer_Messages__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::JangadaServer.Messages, global::JangadaServer.Messages.Builder>(internal__static_JangadaServer_Messages__Descriptor,
                new string[] { "Networkmessage", });
        return null;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          }, assigner);
    }
    #endregion
    
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class LoginPacket : pb::GeneratedMessage<LoginPacket, LoginPacket.Builder> {
    private LoginPacket() { }
    private static readonly LoginPacket defaultInstance = new LoginPacket().MakeReadOnly();
    private static readonly string[] _loginPacketFieldNames = new string[] { "password", "userName" };
    private static readonly uint[] _loginPacketFieldTags = new uint[] { 18, 10 };
    public static LoginPacket DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override LoginPacket DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override LoginPacket ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::JangadaServer.Networkmessage.internal__static_JangadaServer_LoginPacket__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<LoginPacket, LoginPacket.Builder> InternalFieldAccessors {
      get { return global::JangadaServer.Networkmessage.internal__static_JangadaServer_LoginPacket__FieldAccessorTable; }
    }
    
    public const int UserNameFieldNumber = 1;
    private bool hasUserName;
    private string userName_ = "";
    public bool HasUserName {
      get { return hasUserName; }
    }
    public string UserName {
      get { return userName_; }
    }
    
    public const int PasswordFieldNumber = 2;
    private bool hasPassword;
    private string password_ = "";
    public bool HasPassword {
      get { return hasPassword; }
    }
    public string Password {
      get { return password_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasUserName) return false;
        if (!hasPassword) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _loginPacketFieldNames;
      if (hasUserName) {
        output.WriteString(1, field_names[1], UserName);
      }
      if (hasPassword) {
        output.WriteString(2, field_names[0], Password);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasUserName) {
          size += pb::CodedOutputStream.ComputeStringSize(1, UserName);
        }
        if (hasPassword) {
          size += pb::CodedOutputStream.ComputeStringSize(2, Password);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static LoginPacket ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LoginPacket ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LoginPacket ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LoginPacket ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LoginPacket ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LoginPacket ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static LoginPacket ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static LoginPacket ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static LoginPacket ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LoginPacket ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private LoginPacket MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(LoginPacket prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<LoginPacket, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(LoginPacket cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private LoginPacket result;
      
      private LoginPacket PrepareBuilder() {
        if (resultIsReadOnly) {
          LoginPacket original = result;
          result = new LoginPacket();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override LoginPacket MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::JangadaServer.LoginPacket.Descriptor; }
      }
      
      public override LoginPacket DefaultInstanceForType {
        get { return global::JangadaServer.LoginPacket.DefaultInstance; }
      }
      
      public override LoginPacket BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is LoginPacket) {
          return MergeFrom((LoginPacket) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(LoginPacket other) {
        if (other == global::JangadaServer.LoginPacket.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUserName) {
          UserName = other.UserName;
        }
        if (other.HasPassword) {
          Password = other.Password;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_loginPacketFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _loginPacketFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasUserName = input.ReadString(ref result.userName_);
              break;
            }
            case 18: {
              result.hasPassword = input.ReadString(ref result.password_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasUserName {
        get { return result.hasUserName; }
      }
      public string UserName {
        get { return result.UserName; }
        set { SetUserName(value); }
      }
      public Builder SetUserName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUserName = true;
        result.userName_ = value;
        return this;
      }
      public Builder ClearUserName() {
        PrepareBuilder();
        result.hasUserName = false;
        result.userName_ = "";
        return this;
      }
      
      public bool HasPassword {
        get { return result.hasPassword; }
      }
      public string Password {
        get { return result.Password; }
        set { SetPassword(value); }
      }
      public Builder SetPassword(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPassword = true;
        result.password_ = value;
        return this;
      }
      public Builder ClearPassword() {
        PrepareBuilder();
        result.hasPassword = false;
        result.password_ = "";
        return this;
      }
    }
    static LoginPacket() {
      object.ReferenceEquals(global::JangadaServer.Networkmessage.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class LogoutPacket : pb::GeneratedMessage<LogoutPacket, LogoutPacket.Builder> {
    private LogoutPacket() { }
    private static readonly LogoutPacket defaultInstance = new LogoutPacket().MakeReadOnly();
    private static readonly string[] _logoutPacketFieldNames = new string[] { "quit" };
    private static readonly uint[] _logoutPacketFieldTags = new uint[] { 8 };
    public static LogoutPacket DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override LogoutPacket DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override LogoutPacket ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::JangadaServer.Networkmessage.internal__static_JangadaServer_LogoutPacket__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<LogoutPacket, LogoutPacket.Builder> InternalFieldAccessors {
      get { return global::JangadaServer.Networkmessage.internal__static_JangadaServer_LogoutPacket__FieldAccessorTable; }
    }
    
    public const int QuitFieldNumber = 1;
    private bool hasQuit;
    private bool quit_;
    public bool HasQuit {
      get { return hasQuit; }
    }
    public bool Quit {
      get { return quit_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasQuit) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _logoutPacketFieldNames;
      if (hasQuit) {
        output.WriteBool(1, field_names[0], Quit);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasQuit) {
          size += pb::CodedOutputStream.ComputeBoolSize(1, Quit);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static LogoutPacket ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LogoutPacket ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LogoutPacket ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LogoutPacket ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LogoutPacket ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LogoutPacket ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static LogoutPacket ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static LogoutPacket ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static LogoutPacket ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LogoutPacket ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private LogoutPacket MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(LogoutPacket prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<LogoutPacket, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(LogoutPacket cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private LogoutPacket result;
      
      private LogoutPacket PrepareBuilder() {
        if (resultIsReadOnly) {
          LogoutPacket original = result;
          result = new LogoutPacket();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override LogoutPacket MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::JangadaServer.LogoutPacket.Descriptor; }
      }
      
      public override LogoutPacket DefaultInstanceForType {
        get { return global::JangadaServer.LogoutPacket.DefaultInstance; }
      }
      
      public override LogoutPacket BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is LogoutPacket) {
          return MergeFrom((LogoutPacket) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(LogoutPacket other) {
        if (other == global::JangadaServer.LogoutPacket.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasQuit) {
          Quit = other.Quit;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_logoutPacketFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _logoutPacketFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasQuit = input.ReadBool(ref result.quit_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasQuit {
        get { return result.hasQuit; }
      }
      public bool Quit {
        get { return result.Quit; }
        set { SetQuit(value); }
      }
      public Builder SetQuit(bool value) {
        PrepareBuilder();
        result.hasQuit = true;
        result.quit_ = value;
        return this;
      }
      public Builder ClearQuit() {
        PrepareBuilder();
        result.hasQuit = false;
        result.quit_ = false;
        return this;
      }
    }
    static LogoutPacket() {
      object.ReferenceEquals(global::JangadaServer.Networkmessage.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ChatPacket : pb::GeneratedMessage<ChatPacket, ChatPacket.Builder> {
    private ChatPacket() { }
    private static readonly ChatPacket defaultInstance = new ChatPacket().MakeReadOnly();
    private static readonly string[] _chatPacketFieldNames = new string[] { "message" };
    private static readonly uint[] _chatPacketFieldTags = new uint[] { 10 };
    public static ChatPacket DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ChatPacket DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ChatPacket ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::JangadaServer.Networkmessage.internal__static_JangadaServer_ChatPacket__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ChatPacket, ChatPacket.Builder> InternalFieldAccessors {
      get { return global::JangadaServer.Networkmessage.internal__static_JangadaServer_ChatPacket__FieldAccessorTable; }
    }
    
    public const int MessageFieldNumber = 1;
    private bool hasMessage;
    private string message_ = "";
    public bool HasMessage {
      get { return hasMessage; }
    }
    public string Message {
      get { return message_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasMessage) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _chatPacketFieldNames;
      if (hasMessage) {
        output.WriteString(1, field_names[0], Message);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasMessage) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Message);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ChatPacket ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ChatPacket ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ChatPacket ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ChatPacket ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ChatPacket ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ChatPacket ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ChatPacket ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ChatPacket ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ChatPacket ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ChatPacket ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ChatPacket MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ChatPacket prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ChatPacket, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ChatPacket cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ChatPacket result;
      
      private ChatPacket PrepareBuilder() {
        if (resultIsReadOnly) {
          ChatPacket original = result;
          result = new ChatPacket();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ChatPacket MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::JangadaServer.ChatPacket.Descriptor; }
      }
      
      public override ChatPacket DefaultInstanceForType {
        get { return global::JangadaServer.ChatPacket.DefaultInstance; }
      }
      
      public override ChatPacket BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ChatPacket) {
          return MergeFrom((ChatPacket) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ChatPacket other) {
        if (other == global::JangadaServer.ChatPacket.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasMessage) {
          Message = other.Message;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_chatPacketFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _chatPacketFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasMessage = input.ReadString(ref result.message_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasMessage {
        get { return result.hasMessage; }
      }
      public string Message {
        get { return result.Message; }
        set { SetMessage(value); }
      }
      public Builder SetMessage(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMessage = true;
        result.message_ = value;
        return this;
      }
      public Builder ClearMessage() {
        PrepareBuilder();
        result.hasMessage = false;
        result.message_ = "";
        return this;
      }
    }
    static ChatPacket() {
      object.ReferenceEquals(global::JangadaServer.Networkmessage.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class NetworkMessage : pb::GeneratedMessage<NetworkMessage, NetworkMessage.Builder> {
    private NetworkMessage() { }
    private static readonly NetworkMessage defaultInstance = new NetworkMessage().MakeReadOnly();
    private static readonly string[] _networkMessageFieldNames = new string[] { "chatPacket", "loginPacket", "logoutPacket", "type" };
    private static readonly uint[] _networkMessageFieldTags = new uint[] { 34, 18, 26, 8 };
    public static NetworkMessage DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override NetworkMessage DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override NetworkMessage ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::JangadaServer.Networkmessage.internal__static_JangadaServer_NetworkMessage__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<NetworkMessage, NetworkMessage.Builder> InternalFieldAccessors {
      get { return global::JangadaServer.Networkmessage.internal__static_JangadaServer_NetworkMessage__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum Type {
        LOGIN = 1,
        LOGOUT = 2,
        CHAT = 3,
      }
      
    }
    #endregion
    
    public const int TypeFieldNumber = 1;
    private bool hasType;
    private global::JangadaServer.NetworkMessage.Types.Type type_ = global::JangadaServer.NetworkMessage.Types.Type.LOGIN;
    public bool HasType {
      get { return hasType; }
    }
    public global::JangadaServer.NetworkMessage.Types.Type Type {
      get { return type_; }
    }
    
    public const int LoginPacketFieldNumber = 2;
    private bool hasLoginPacket;
    private global::JangadaServer.LoginPacket loginPacket_;
    public bool HasLoginPacket {
      get { return hasLoginPacket; }
    }
    public global::JangadaServer.LoginPacket LoginPacket {
      get { return loginPacket_ ?? global::JangadaServer.LoginPacket.DefaultInstance; }
    }
    
    public const int LogoutPacketFieldNumber = 3;
    private bool hasLogoutPacket;
    private global::JangadaServer.LogoutPacket logoutPacket_;
    public bool HasLogoutPacket {
      get { return hasLogoutPacket; }
    }
    public global::JangadaServer.LogoutPacket LogoutPacket {
      get { return logoutPacket_ ?? global::JangadaServer.LogoutPacket.DefaultInstance; }
    }
    
    public const int ChatPacketFieldNumber = 4;
    private bool hasChatPacket;
    private global::JangadaServer.ChatPacket chatPacket_;
    public bool HasChatPacket {
      get { return hasChatPacket; }
    }
    public global::JangadaServer.ChatPacket ChatPacket {
      get { return chatPacket_ ?? global::JangadaServer.ChatPacket.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasType) return false;
        if (HasLoginPacket) {
          if (!LoginPacket.IsInitialized) return false;
        }
        if (HasLogoutPacket) {
          if (!LogoutPacket.IsInitialized) return false;
        }
        if (HasChatPacket) {
          if (!ChatPacket.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _networkMessageFieldNames;
      if (hasType) {
        output.WriteEnum(1, field_names[3], (int) Type, Type);
      }
      if (hasLoginPacket) {
        output.WriteMessage(2, field_names[1], LoginPacket);
      }
      if (hasLogoutPacket) {
        output.WriteMessage(3, field_names[2], LogoutPacket);
      }
      if (hasChatPacket) {
        output.WriteMessage(4, field_names[0], ChatPacket);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasType) {
          size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Type);
        }
        if (hasLoginPacket) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, LoginPacket);
        }
        if (hasLogoutPacket) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, LogoutPacket);
        }
        if (hasChatPacket) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, ChatPacket);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static NetworkMessage ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static NetworkMessage ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static NetworkMessage ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static NetworkMessage ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static NetworkMessage ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static NetworkMessage ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static NetworkMessage ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static NetworkMessage ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static NetworkMessage ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static NetworkMessage ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private NetworkMessage MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(NetworkMessage prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<NetworkMessage, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(NetworkMessage cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private NetworkMessage result;
      
      private NetworkMessage PrepareBuilder() {
        if (resultIsReadOnly) {
          NetworkMessage original = result;
          result = new NetworkMessage();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override NetworkMessage MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::JangadaServer.NetworkMessage.Descriptor; }
      }
      
      public override NetworkMessage DefaultInstanceForType {
        get { return global::JangadaServer.NetworkMessage.DefaultInstance; }
      }
      
      public override NetworkMessage BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is NetworkMessage) {
          return MergeFrom((NetworkMessage) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(NetworkMessage other) {
        if (other == global::JangadaServer.NetworkMessage.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasType) {
          Type = other.Type;
        }
        if (other.HasLoginPacket) {
          MergeLoginPacket(other.LoginPacket);
        }
        if (other.HasLogoutPacket) {
          MergeLogoutPacket(other.LogoutPacket);
        }
        if (other.HasChatPacket) {
          MergeChatPacket(other.ChatPacket);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_networkMessageFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _networkMessageFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.type_, out unknown)) {
                result.hasType = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 18: {
              global::JangadaServer.LoginPacket.Builder subBuilder = global::JangadaServer.LoginPacket.CreateBuilder();
              if (result.hasLoginPacket) {
                subBuilder.MergeFrom(LoginPacket);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              LoginPacket = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::JangadaServer.LogoutPacket.Builder subBuilder = global::JangadaServer.LogoutPacket.CreateBuilder();
              if (result.hasLogoutPacket) {
                subBuilder.MergeFrom(LogoutPacket);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              LogoutPacket = subBuilder.BuildPartial();
              break;
            }
            case 34: {
              global::JangadaServer.ChatPacket.Builder subBuilder = global::JangadaServer.ChatPacket.CreateBuilder();
              if (result.hasChatPacket) {
                subBuilder.MergeFrom(ChatPacket);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ChatPacket = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasType {
       get { return result.hasType; }
      }
      public global::JangadaServer.NetworkMessage.Types.Type Type {
        get { return result.Type; }
        set { SetType(value); }
      }
      public Builder SetType(global::JangadaServer.NetworkMessage.Types.Type value) {
        PrepareBuilder();
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder ClearType() {
        PrepareBuilder();
        result.hasType = false;
        result.type_ = global::JangadaServer.NetworkMessage.Types.Type.LOGIN;
        return this;
      }
      
      public bool HasLoginPacket {
       get { return result.hasLoginPacket; }
      }
      public global::JangadaServer.LoginPacket LoginPacket {
        get { return result.LoginPacket; }
        set { SetLoginPacket(value); }
      }
      public Builder SetLoginPacket(global::JangadaServer.LoginPacket value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasLoginPacket = true;
        result.loginPacket_ = value;
        return this;
      }
      public Builder SetLoginPacket(global::JangadaServer.LoginPacket.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasLoginPacket = true;
        result.loginPacket_ = builderForValue.Build();
        return this;
      }
      public Builder MergeLoginPacket(global::JangadaServer.LoginPacket value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasLoginPacket &&
            result.loginPacket_ != global::JangadaServer.LoginPacket.DefaultInstance) {
            result.loginPacket_ = global::JangadaServer.LoginPacket.CreateBuilder(result.loginPacket_).MergeFrom(value).BuildPartial();
        } else {
          result.loginPacket_ = value;
        }
        result.hasLoginPacket = true;
        return this;
      }
      public Builder ClearLoginPacket() {
        PrepareBuilder();
        result.hasLoginPacket = false;
        result.loginPacket_ = null;
        return this;
      }
      
      public bool HasLogoutPacket {
       get { return result.hasLogoutPacket; }
      }
      public global::JangadaServer.LogoutPacket LogoutPacket {
        get { return result.LogoutPacket; }
        set { SetLogoutPacket(value); }
      }
      public Builder SetLogoutPacket(global::JangadaServer.LogoutPacket value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasLogoutPacket = true;
        result.logoutPacket_ = value;
        return this;
      }
      public Builder SetLogoutPacket(global::JangadaServer.LogoutPacket.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasLogoutPacket = true;
        result.logoutPacket_ = builderForValue.Build();
        return this;
      }
      public Builder MergeLogoutPacket(global::JangadaServer.LogoutPacket value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasLogoutPacket &&
            result.logoutPacket_ != global::JangadaServer.LogoutPacket.DefaultInstance) {
            result.logoutPacket_ = global::JangadaServer.LogoutPacket.CreateBuilder(result.logoutPacket_).MergeFrom(value).BuildPartial();
        } else {
          result.logoutPacket_ = value;
        }
        result.hasLogoutPacket = true;
        return this;
      }
      public Builder ClearLogoutPacket() {
        PrepareBuilder();
        result.hasLogoutPacket = false;
        result.logoutPacket_ = null;
        return this;
      }
      
      public bool HasChatPacket {
       get { return result.hasChatPacket; }
      }
      public global::JangadaServer.ChatPacket ChatPacket {
        get { return result.ChatPacket; }
        set { SetChatPacket(value); }
      }
      public Builder SetChatPacket(global::JangadaServer.ChatPacket value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasChatPacket = true;
        result.chatPacket_ = value;
        return this;
      }
      public Builder SetChatPacket(global::JangadaServer.ChatPacket.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasChatPacket = true;
        result.chatPacket_ = builderForValue.Build();
        return this;
      }
      public Builder MergeChatPacket(global::JangadaServer.ChatPacket value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasChatPacket &&
            result.chatPacket_ != global::JangadaServer.ChatPacket.DefaultInstance) {
            result.chatPacket_ = global::JangadaServer.ChatPacket.CreateBuilder(result.chatPacket_).MergeFrom(value).BuildPartial();
        } else {
          result.chatPacket_ = value;
        }
        result.hasChatPacket = true;
        return this;
      }
      public Builder ClearChatPacket() {
        PrepareBuilder();
        result.hasChatPacket = false;
        result.chatPacket_ = null;
        return this;
      }
    }
    static NetworkMessage() {
      object.ReferenceEquals(global::JangadaServer.Networkmessage.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Messages : pb::GeneratedMessage<Messages, Messages.Builder> {
    private Messages() { }
    private static readonly Messages defaultInstance = new Messages().MakeReadOnly();
    private static readonly string[] _messagesFieldNames = new string[] { "networkmessage" };
    private static readonly uint[] _messagesFieldTags = new uint[] { 10 };
    public static Messages DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Messages DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Messages ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::JangadaServer.Networkmessage.internal__static_JangadaServer_Messages__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Messages, Messages.Builder> InternalFieldAccessors {
      get { return global::JangadaServer.Networkmessage.internal__static_JangadaServer_Messages__FieldAccessorTable; }
    }
    
    public const int NetworkmessageFieldNumber = 1;
    private pbc::PopsicleList<global::JangadaServer.NetworkMessage> networkmessage_ = new pbc::PopsicleList<global::JangadaServer.NetworkMessage>();
    public scg::IList<global::JangadaServer.NetworkMessage> NetworkmessageList {
      get { return networkmessage_; }
    }
    public int NetworkmessageCount {
      get { return networkmessage_.Count; }
    }
    public global::JangadaServer.NetworkMessage GetNetworkmessage(int index) {
      return networkmessage_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::JangadaServer.NetworkMessage element in NetworkmessageList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _messagesFieldNames;
      if (networkmessage_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], networkmessage_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::JangadaServer.NetworkMessage element in NetworkmessageList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Messages ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Messages ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Messages ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Messages ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Messages ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Messages ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Messages ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Messages ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Messages ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Messages ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Messages MakeReadOnly() {
      networkmessage_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Messages prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Messages, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Messages cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Messages result;
      
      private Messages PrepareBuilder() {
        if (resultIsReadOnly) {
          Messages original = result;
          result = new Messages();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Messages MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::JangadaServer.Messages.Descriptor; }
      }
      
      public override Messages DefaultInstanceForType {
        get { return global::JangadaServer.Messages.DefaultInstance; }
      }
      
      public override Messages BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Messages) {
          return MergeFrom((Messages) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Messages other) {
        if (other == global::JangadaServer.Messages.DefaultInstance) return this;
        PrepareBuilder();
        if (other.networkmessage_.Count != 0) {
          result.networkmessage_.Add(other.networkmessage_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_messagesFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _messagesFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.networkmessage_, global::JangadaServer.NetworkMessage.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::JangadaServer.NetworkMessage> NetworkmessageList {
        get { return PrepareBuilder().networkmessage_; }
      }
      public int NetworkmessageCount {
        get { return result.NetworkmessageCount; }
      }
      public global::JangadaServer.NetworkMessage GetNetworkmessage(int index) {
        return result.GetNetworkmessage(index);
      }
      public Builder SetNetworkmessage(int index, global::JangadaServer.NetworkMessage value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.networkmessage_[index] = value;
        return this;
      }
      public Builder SetNetworkmessage(int index, global::JangadaServer.NetworkMessage.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.networkmessage_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddNetworkmessage(global::JangadaServer.NetworkMessage value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.networkmessage_.Add(value);
        return this;
      }
      public Builder AddNetworkmessage(global::JangadaServer.NetworkMessage.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.networkmessage_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeNetworkmessage(scg::IEnumerable<global::JangadaServer.NetworkMessage> values) {
        PrepareBuilder();
        result.networkmessage_.Add(values);
        return this;
      }
      public Builder ClearNetworkmessage() {
        PrepareBuilder();
        result.networkmessage_.Clear();
        return this;
      }
    }
    static Messages() {
      object.ReferenceEquals(global::JangadaServer.Networkmessage.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
