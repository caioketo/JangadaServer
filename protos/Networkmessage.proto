package Jangada;

option optimize_for = SPEED;

message Networkmessage {
  enum Type {
    LOGIN = 0;
	CHARACTERS = 1;
	SELECTEDCHAR = 2;
	AREA_DESCRIPTION = 3;
	REQUEST_MOVEMENT = 4;
	PLAYER_MOVEMENT = 5;
	PLAYER_LOGIN = 6;
	CHARACTER_MOVEMENT = 7;
	PLAYER_LOGOUT = 8;
  }

  required Type type = 1;
  optional LoginPacket loginPacket = 2;
  optional CharactersPacket charactersPacket = 3;
  optional SelectCharacterPacket selectCharacterPacket = 4;
  optional AreaDescriptionPacket areaDescriptionPacket = 5;
  optional RequestMovementPacket requestMovementPacket = 6;
  optional PlayerMovementPacket playerMovementPacket = 7;
  optional PlayerLoginPacket playerLoginPacket = 8;
  optional CharacterMovementPacket characterMovementPacket = 9;
  optional PlayerLogoutPacket playerLogoutPacket = 10;
}
 
message LoginPacket {
  required string login = 1;
  required string password = 2;
}

message Character {
  required int32 id = 1;
  required string name = 2;
  required string info = 3;
}

message CharactersPacket {
  repeated Character CharacterList = 1;
}

message SelectCharacterPacket {
  required int32 id = 1;
}

message Position {
  required float x = 1;
  required float y = 2;
  required float z = 3;
}

message QuaternionMessage {
  required float w = 1;
  required float x = 2;
  required float y = 3;
  required float z = 4;
}

message RequestMovementPacket {
  enum MovementType {
    FORWARD = 1;
	BACKWARD = 2;
	YAW = 3;
  }

  required MovementType movementType = 1;
  required float ammount = 2;
}

message AreaDescriptionPacket {
  required int32 areaId = 1;
  required PlayerDescription player = 2;
  repeated PlayerDescription players = 3;
  repeated CreatureDescription creatures = 4;
}

message CreatureDescription {
  required string creatureGuid = 1;
  required int32 modelId = 2;
  required Position creaturePosition = 3;
  required QuaternionMessage creatureRotation = 4;
  required StatsDescription stats = 5;
}

message PlayerDescription {
  required string playerGuid = 1;
  required Position playerPosition = 2;
  required QuaternionMessage playerRotation = 3;
  required StatsDescription stats = 4;
}

message StatsDescription {
  required int32 CONS = 1;
  required int32 STR = 2;
  required int32 INT = 3;
  required int32 WIS = 4;
  required int32 DEX = 5;

  required int32 HP = 6;
  required int32 MP = 7;
}

message PlayerLoginPacket {
  required PlayerDescription player = 1;
}

message PlayerMovementPacket {
  required Position newPosition = 1;
  required QuaternionMessage newRotation = 2;
}

message CharacterMovementPacket {
  required PlayerDescription player = 1;
}

message Messages {
  repeated Networkmessage Networkmessage = 1;
}

message PlayerLogoutPacket {
  required string playerGuid = 1;
}